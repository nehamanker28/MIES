export default {
    create_account : 'Create Account',
    set_password : 'Set Password',
    login :'Login'
};

const AlertMessage = {
    valid_userName: 'please enter valid email / mobile no',
    valid_password: 'please enter valid password',
    valid_add_session_family: 'Please select family',
    valid_session_time: 'Please select future time',
    valid_time: 'Session time should be minimum 30 min',
    valid_session_description : 'Please enter valid description',
    valid_email_address :'Please enter a valid email address',
    valid_mobile_no: 'Please enter a valid mobile number',
    valid_location: 'Please select location',
    valid_reason :'Please add a note',
}

const ServiceUrl = {
    //dev server 
    // base_url: 'http://3.21.88.8:8080/auth-service/',
    // base_url_91: 'http://3.21.88.8:8080/session-service/',
    // base_notification : 'http://3.21.88.8:9092/',
    // SOCKET_URL : "http://3.21.88.8:9091/mis-websocket",
    // //Stag Server 
    // base_url: 'http://18.221.202.110:8080/auth-service/',
    // base_url_91: 'http://18.221.202.110:8080/session-service/',
    // base_notification : 'http://18.221.202.110:9092/',
    // SOCKET_URL : "http://18.221.202.110:9091/mis-websocket",
    // //QA Server
    base_url: 'http://3.130.73.230:8080/auth-service/',
    base_url_91: 'http://3.130.73.230:8080/session-service/',
    base_notification : 'http://3.130.73.230:9092/',
    SOCKET_URL : "http://3.130.73.230:9091/mis-websocket",
    //Production Server
    // base_url: 'http://3.143.162.122:9090/auth-service/',
    // base_url_91: 'http://3.143.162.122:9091/session-service/',
    // base_notification : 'http://3.143.162.122:9092/',
    // SOCKET_URL : 'http://3.143.162.122:9091/mis-websocket',
    
    getTenant: 'api/tenants',
    loginUrl: 'api/auth/login',
    setPassword: 'api/users/',
    forgotPassword :'api/auth/forgot-password/',
    getFamily: 'api/therapist/family-members',
    getAllFamily :'api/families/',
    //familyfilter :'api/families/filter',
    addSession: 'api/therapist/sessions',
    getSessionForTherapist: 'api/therapist/sessions',
    getTherapistProfile: 'api/therapists/detail',
    updateTherapistSession: 'api/therapist/sessions',
    updateInterpreterSession: 'api/interpreter/sessions',
    updateFamilySession: 'api/family/sessions',
    cancelFamilySession :'api/family/sessions/session-cancel-request',
    cancelInterpreterSession :'api/interpreter/sessions/session-cancel-request',
    cancelSessionTherapist :'api/sessions',
    familySessions: 'api/family/sessions',
    getFamilyProfile: 'api/families/detail',
    getResources : 'api/resources',
    getInterpreterProfile: 'api/interpreters/detail',
    getSessionForInterpreter: 'api/interpreter/sessions',
    getSessionForFamily : 'api/family/sessions',
    getFamilyDetailByChildID : 'api/families/my-team',
    getFamilyFaq: 'api/faqs',
    familyFilter: 'api/therapist/family-members/filter',
    //-- Notification apis
    getNotificatioListforThearpist :'api/notifications/Therapist/',
    getNotificatioListforFamily :'api/notifications/family/',
    getNotificatioListforInterpreter :'api/notifications/Interpreter/',
    getAgoraToken: 'api/agora-tokens/',
    addCaseNote: 'api/case-notes',
    appendCaseNote : 'api/case-notes/append',
    therapistAcceptSessionCancelRequest : 'api/therapist/sessions/accept-session-cancel-request/',
    therapistDenySessionCancelRequest : 'api/therapist/sessions/deny-session-cancel-request/',
    therapistAcceptSession : 'api/therapist/sessions/accept-session/',
    therapistDenySession: 'api/therapist/sessions/deny-session/',
    acquireVideoCall: 'api/session-recordings/acquire-resource',
    startRecordSession: 'api/session-recordings/session/',
    stopRecordSession: 'api/session-recordings/',
    downloadRecordVideo:'api/session-recordings/',
    therapistDenySession : 'api/therapist/sessions/deny-session/',
    UpdateProfileImage: 'api/user-profiles',
    addAttachmentForCaseNote: 'api/attachments',
    getCaseNotes: 'api/case-notes/all',
    sharedCaseNotes :'api/case-notes/shared',
    getCaseNotesBySession : 'api/case-notes/sessions',
    translateCaseNote: 'api/case-notes/',
    endVideoCallApi:'api/sessions/stop-session/',
    changeThearpistRequestByfamily: 'api/family/sessions/therapist-change-request',
    changeInterpreterRequestByfamily: 'api/family/sessions/interpreter-change-request',
    getCaseNoteBySession: 'api/case-notes/sessions/',
    getInterpreterFamily:'api/families/interpreter',
    createQueriesbyFamily: 'api/queries',
    getQueriesBySession: 'api/queries/sessions/',
    getCaseNoteBySession: 'api/case-notes/sessions/',
    getICDCodes: 'api/diagnoses/sessions/',
    getCPTCodes:'api/cpts/sessions/',
    AddQueryReply :'api/query-replies',
    GetQueryReply : 'api/query-replies/queries/',
    translateQueries :'api/queries/',
    translateQueriesReplies :'api/query-replies/',
    getUserDetail:'api/user-profiles/',
    familySignOff:'api/case-notes/',
    sessionRequest:'api/family/sessions/session-create-request',
    uploadForms :'api/forms',
    updateForms :'api/forms/',
    getTherapistForm :'api/forms/therapist/',
    getformsDetailbyFamilyID :'api/forms/family-member/',
    getTherapistSearch:'api/therapists/filter',
    shareCaseNote: 'api/case-notes/',
    getBillingDetails:'api/session-billings/dashboard/therapist',
    getBillingDetailInterpreter:'api/session-billings/dashboard/interpreter',
    acceptSoapNote:'api/case-notes/',
    getTherapistBillings :'api/session-billings/therapist',
    getInterpreterBillings: 'api/session-billings/interpreter',
    getRecordList : 'api/session-recordings/single/',
    getBillingCompany : 'api/misc/billing-company-details'
}

const AsyncStorageKey = {
    userUniqueId: 'user_id',
    userID : 'userID',
    sessionId: 'session_id',
    accessToken: 'access_token',
    role: 'role',
    userName: 'user_Name',
    email: 'email',
    password: 'password',
    data: 'data',
    image:'image',
    phone :'phone',
    tenantId : 'tenantId',
    signature: 'signature',
    billingCompany: 'billing'
}

export{ AlertMessage, ServiceUrl, AsyncStorageKey }